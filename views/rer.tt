<%- USE Decode %>
<!DOCTYPE html>
<html lang="fr">

<head>
	<meta http-equiv="Content-type" content="text/html; charset=utf-8" />
	<link rel="stylesheet" type="text/css" href="css/rer.css" media="screen" />
	<link rel="stylesheet" type="text/css" href="css/rer-mobile.css" media="handheld, screen and (max-width: 480px)" />
	<link rel="stylesheet" type='text/css' href='http://fonts.googleapis.com/css?family=Tauri' media="screen" />
	<link rel="shortcut icon" href="favicon.ico" />
	<link rel="icon" type="image/vnd.microsoft.icon" href="favicon.ico" />
	<link rel="apple-touch-icon" href="favicon-macfags.png" />
	<title><% origin_station %> &bull; Prochains départs</title>

<script type="text/javascript">


var scrollTimeout = 3000;

var retardTimeout1 = 5000;
var retardTimeout2 = 2500;

var originCode = "<% origin_code %>";

var origTrains = [1, 1, 1, 1, 1, 1];

var dataRefreshTimer;
var col2flipTimer;



/* because IE sucks ass
 * source: Javascript Cookbook, Shelly Powers, O'Reilly, page 122 */
function listenEvent(eventTarget, eventType, eventHandler) {
	if (eventTarget.addEventListener) {
		eventTarget.addEventListener(eventType, eventHandler, false);
	} else if (eventTarget.attachEvent) {
		eventType = "on" + eventType;
		eventTarget.attachEvent(eventType, eventHandler);
	} else {
		eventTarget["on" + eventType] = eventHandler;
	}
}

/* because IE sucks ass, again */
function by_classname(class_name) {
	if (document.getElementsByClassName)
		return document.getElementsByClassName(class_name);
	if (document.querySelectorAll)
		return document.querySelectorAll('.' + class_name);
}


/* manipulate train timetable easier */
function table_get_node(row, column) {
	if (column)
		return document.getElementById('t' + row + 'c' + column);
	else
		return document.getElementById('t' + row);
}

function table_set_classname(row, column, class_name) {
	table_get_node(row, column).className = class_name;
}

function table_set_innerhtml(row, column, html) {
	table_get_node(row, column).innerHTML = html;
}




function extract_number(str) {
	var num = 0;
	if (str) {
		num = str.toString().match(/-?\d+/);
		num = num ? parseInt(num[0]) : 0;
	}
	return num;
}

function extract_float(str) {
	if (str) {
		num = str.toString().match(/-?\d+(\.\d+)?/);
		num = num ? parseFloat(num[0]) : 0;
		return num;
	}
	else {
		return undefined;
	}
}


function get_data(obj) {
	if (obj.readyState == 4 && obj.status == 200) {
		var text = obj.responseText;
		var trains = JSON.parse(text);
	
		for (var i = 0; i < trains.length; i++) {
			var train = trains[i];

			table_get_node(i).className = train.trainclass;

			table_set_innerhtml(i, '1', 
				  "<span class='mission-train'>" + train.mission 
				+ "</span> <span class='numero-train'>"
				+ train.numero + "</span>");

			table_set_classname(i, '2', train.col2class);
			table_set_innerhtml(i, '2', train.time);

			if (train.time != 'Supprimé' && train.time != 'Retardé') 
				table_set_innerhtml(i, '2b', train.retard);
			else 
				table_set_innerhtml(i, '2b', '');

			var dest = train.destination;
			if (train.ligne)
				dest = '<img src="img/rer' 
					+ train.ligne + '.svg" alt="'
					+ train.ligne + '" />' + ' ' + dest;

			table_set_innerhtml(i, '3a', dest);
			if (i < 2) {
				var p = table_get_node(i, '3b').childNodes[0];
				p.innerHTML = train.dessertes;
				if (origTrains[i] != train.numero) {
					p.style.bottom = "0.1em";
				}
			}
				

			table_set_innerhtml(i, '4', '<span class="voie">' + train.platform + '</span>');
			origTrains[i] = train.numero;
		}
		for (; i < 6; i++)
		{
			table_get_node(i).className = 'train';
			table_set_innerhtml(i, '1', "&nbsp;<br />&nbsp;");
			table_set_classname(i, '2', "col2");
			table_set_innerhtml(i, '2', "&nbsp;");
			table_set_innerhtml(i, '2b', "&nbsp;");
			table_set_innerhtml(i, '3a', "&nbsp;");
			if (i < 2) {
				table_set_innerhtml(i, '3b', "<p style='bottom: 0.1em'>"
					+ "&nbsp;"
					+ "</p></div>");
			}
			else 
			
			table_set_innerhtml(i, '4', '&nbsp;');
			origTrains[i] = -1;
		}

		dataRefreshTimer = window.setTimeout(function() { init_data(0) }, 12000);
		col2flipTimer = window.setTimeout(function() { flip_retard(1) }, retardTimeout1);
	}
	else if (obj.status >= 400) {
		die("Impossible de récupérer les prochains trains (erreur " 
			+ obj.status + ").");
	}
}

/* b = 1 => afficher retard
 * b = 0 => afficher heures */
function flip_retard(b) {
	var col2    = by_classname("col2");
	var col2bis = by_classname("col2bis");

	var hide;
	var show;

	if (b) { hide = col2; show = col2bis; }
	else { hide = col2bis; show = col2; }
	
	for (var i = 0; i < hide.length; i++) {
		if (show[i].innerHTML)
			hide[i].style.display = 'none';
	}
	for (var i = 0; i < show.length; i++) {
		if (show[i].innerHTML)
			show[i].style.display = 'table-cell';
	}

	window.clearTimeout(col2flipTimer);
	col2flipTimer = window.setTimeout(flip_retard, 
		b ? retardTimeout2 : retardTimeout1,
		b ? 0 : 1);
}


function init_data(b) {
	if (b) {
		if (dataRefreshTimer) { window.clearTimeout(dataRefreshTimer); }

		for (var i = 0; i < 6; i++) {
			table_get_node(i).className = 'train';
			table_set_innerhtml(i, '1', "&nbsp;<br />&nbsp;");
			table_set_classname(i, '2', "col2");
			table_set_innerhtml(i, '2', "&nbsp;");
			table_set_innerhtml(i, '2b', "&nbsp;");
			if (i < 2) {
				table_set_innerhtml(i, '3a', "Chargement... ");
				table_set_innerhtml(i, '3b', "<p style='bottom: 0.1em'>"
					+ "Chargement en cours..."
					+ "</p></div>");
			}
			else 
				table_set_innerhtml(i, '3a', "&nbsp;");
			
			table_set_innerhtml(i, '4', '&nbsp;');
			origTrains[i] = -1;
		}
	}


	var xmlHttp = new XMLHttpRequest();

	xmlHttp.open("GET", "json?s=" + originCode, true);
	xmlHttp.send();

	xmlHttp.onreadystatechange = function() { get_data(xmlHttp); };
}


function init_scroll() {
	for (var i = 0; i < 2; i++) {
		var pNode = table_get_node(i, '3b').childNodes[0];
		pNode.style.bottom = "0.1em";
		window.setTimeout("train_scroll("+i+")", scrollTimeout);
	}
}

function init_other() {
	document.getElementById("station_submit").style.display = "none";
	document.getElementById("otherstation").style.display = "none";
	document.getElementById("disclaimer").style.display = "none";
}




/* set/kill scroll animation */
/* b = 0 -> kill, b = 1 -> set */
function set_scroll(node, b) {
	node.style.transitionDuration 		  = b ? '0.9s' : '0s';
	node.style['-webkit-transition-duration'] = b ? '0.9s' : '0s';
	node.style.transitionProperty 		  = b ? 'bottom' : 'none';
	node.style['-webkit-transition-property'] = b ? 'bottom' : 'none';
}


/* Warning, this function contains ugly hacks with vendor-proprietary CSS
 * attributes.  The Webkit guys usually do a good job, but messed this up
 * big time.  It is frustrating to see a standards-compliant design break on
 * mobile devices because of that.
 */
function train_scroll(num) {
	/* scrolls obj */
	var pNode = table_get_node(num, '3b').childNodes[0];

	var scroll = 0;
	if (pNode.style)
		scroll = extract_float(pNode.style.bottom);
	else 
		pNode.style = "bottom: 0em;";
	
	var height    = pNode.clientHeight;
	var p_height  = pNode.parentNode.clientHeight;
	/* p_height gives us 1.3em in pixels so we convert em into px */
	var scroll_px = scroll * p_height / 1.3;  


	if (scroll_px >= height) {
		set_scroll(pNode, 0);
		scroll = -1.4;
		pNode.style.bottom = scroll + "em";
		return train_scroll(num);
	}

	if (height > 2 * p_height) {
		set_scroll(pNode, 1);
		scroll += 1.5;
		window.setTimeout(function() { set_scroll(pNode, 0) }, '1000');
		pNode.style.bottom = scroll + "em"; 
	}
	else {
		pNode.style.bottom = "0.1em"; 
	}

	/* have we scrolled beyond an element's max height? */

	window.setTimeout(function() { train_scroll(num); }, scrollTimeout);
}

function change_station(do_push_state) {
	var sel = document.getElementById("station_list");
	var new_code 	= sel.options[sel.selectedIndex].value;
	var new_station = sel.options[sel.selectedIndex].text;

	flip_retard(false);

	if (do_push_state !== false) {
		window.history.pushState(
			new_code, new_station, "?s=" + new_code);
	}

	originCode = new_code;
	init_data(1);
	document.title = new_station + " \u2022 Prochains départs";
	document.getElementById("departure-station").innerHTML = new_station;

}


var active_block;
function toggle_block(id) {
	var block  = document.getElementById(id);
	var active = document.getElementById(active_block);
	if (!block) return;

	if (id != active_block) {
		if (active)
			active.style.display = 'none';

		block.style.display = 'block';
		active_block = id;
	}
	else {
		block.style.display = 'none';
		active_block = undefined;
	}
}

listenEvent(window, "load", function() { init_data(1); init_scroll(); init_other(); });

window.onpopstate = function(e) {
	if (e.state) {
		document.getElementById("station_list").value = e.state;
		change_station(false);
	}
}

</script>
</head>

<body>
<h1>Départ : <span class="departure-station" id="departure-station"><% origin_station %></span></h1>

<div class="listetrains">

<% FOR i in [0..5] %>
<div class="train" id="t<% i %>">
	<div class="col1" id="t<% i %>c1">&nbsp;</div>
	<div class="col2" id="t<% i %>c2">&nbsp;</div>
	<div class="col2bis" id="t<% i %>c2b">&nbsp;</div>
	<div class="col3" id="t<% i %>c3"><span id="t<% i %>c3a"><% IF i <= 1 %>Chargement...<% END %></span>
	<% IF i <= 1 %>
	<div class="desserte" id="t<% i %>c3b"><p>Chargement en cours...</p>
	</div><% END %>
	</div>
	<div class="col4" id="t<% i %>c4">&nbsp;</div>
</div>
<% END %>


</div>

<div id="error"><p id="errormsg">
	<script type="text/javascript">document.getElementById("error").style.display = "none";</script>
	<noscript>Désolé, ce site nécessite JavaScript pour fonctionner.</noscript>
	</p>
</div>

<div class="subwindow">

<p>
	<a href="#" onclick="toggle_block('otherstation')">Autre gare</a>&nbsp;&bull;&nbsp;
	<a href="#" onclick="toggle_block('disclaimer')">Dégagement de responsabilité</a>
</p>

<div class="content">
<div id="otherstation">
<form method="GET" action="#">
	Sélectionnez une gare : 
	<select id="station_list" name="s" onchange="change_station()">
<% FOREACH s IN stations -%>
		<option value="<% s.code %>"<%- IF s.code == origin_code %> selected="selected"<%- END -%>><% s.name | decode %></option>
<% END -%>
	</select>
	<input id="station_submit" type="submit" value="valider" />
</form>
</div>

<div id="disclaimer">
<p>Cette application Web est expérimentale. Elle n'est pas officielle et n'est
donc ni prise en charge, ni approuvée par la SNCF.</p>
<p>Les informations de retard peuvent être manquantes ou inexactes.</p>
<p>Pour tout bugreport, <a href="/contact">contactez-moi</a>.</p>
</div>

</div>

</div>


<div id="footer">
<p>&copy; 2013 <a href="http://x0r.fr">x0r</a> • <a href="http://x0r.fr/blog/23">Blog</a> • <a href="https://code.x0r.fr/rer-web">Code source</a> • <a href="http://test.data-sncf.com/index.php?p=transilien">SNCF Open Data Transilien</a></p>
</div>

</body>

</html>

