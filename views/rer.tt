<!DOCTYPE html>
<html lang="fr">

<head>
	<meta http-equiv="Content-type" content="text/html; charset=utf-8" />
	<meta name="description" content="Liste des six prochains trains pour n'importe quelle gare SNCF Transilien" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta name="msapplication-config" content="none">
	<link rel="stylesheet" type="text/css" media="screen" href="css/common.css" />
	<link rel="stylesheet" type="text/css" media="screen and (max-width: 480px)" href="css/small.css" />
	<link rel="stylesheet" type="text/css" media="screen and (min-width: 481px)" href="css/big.css" />
	<link rel="stylesheet" type='text/css' href='https://fonts.googleapis.com/css?family=Tauri' media="screen" />
	<link rel="shortcut icon" href="favicon.ico" />
	<link rel="icon" type="image/vnd.microsoft.icon" href="favicon.ico" />
	<link rel="apple-touch-icon" href="favicon-macfags.png" />
	<script type="text/javascript" src="js/autocomp.js"></script>
	<title><% origin_station %> &bull; Prochains départs</title>

<script type="text/javascript">

var scrollTimeout = 3000;
var msgScrollTimeout = 14000;

var retardTimeout1 = 5500;
var retardTimeout2 = 3500;

var originCode = "<% origin_code %>";
var originLineFilter;

var origTrains = [1, 1, 1, 1, 1, 1];

var dataRefreshTimer;
var col2flipTimer;

var dataRetryCount = 0;

var xmlHttp;


/* because IE sucks ass
 * source: Javascript Cookbook, Shelly Powers, O'Reilly, page 122 */
function listenEvent(eventTarget, eventType, eventHandler) {
	if (eventTarget.addEventListener) {
		eventTarget.addEventListener(eventType, eventHandler, false);
	} else if (eventTarget.attachEvent) {
		eventType = "on" + eventType;
		eventTarget.attachEvent(eventType, eventHandler);
	} else {
		eventTarget["on" + eventType] = eventHandler;
	}
}

/* because IE sucks ass, again */
function by_classname(class_name) {
	if (document.getElementsByClassName)
		return document.getElementsByClassName(class_name);
	if (document.querySelectorAll)
		return document.querySelectorAll('.' + class_name);
}


/* manipulate train timetable easier */
function table_get_node(row, column) {
	if (column)
		return document.getElementById('t' + row + 'c' + column);
	else
		return document.getElementById('t' + row);
}

function table_set_innerhtml(row, column, html) {
	var classlist = table_get_node(row, column).classList;
	classlist.remove('no-data');
	if (!html) {
		classlist.add('no-data');
	}

	table_get_node(row, column).classList = classlist;
	table_get_node(row, column).innerHTML = (html ? html : '');
}

function set_cookie(name, value) {
	var expires = new Date();
	expires.setDate(expires.getDate() + 28);

	var cookie_str = name + "=" + value + "; expires=" + expires.toUTCString();
	document.cookie = cookie_str;
}


function extract_number(str) {
	var num = 0;
	if (str) {
		num = str.toString().match(/-?\d+/);
		num = num ? parseInt(num[0]) : 0;
	}
	return num;
}

function extract_float(str) {
	if (str) {
		num = str.toString().match(/-?\d+(\.\d+)?/);
		num = num ? parseFloat(num[0]) : 0;
		return num;
	}
	else {
		return undefined;
	}
}



function die(str) {
	document.getElementById("error").style.display = 'block';
	document.getElementById("errormsg").innerHTML = str;
}

function undie() {
	document.getElementById("error").style.display = 'none';
	document.getElementById("errormsg").innerHTML = '&nbsp;';
}


function update_time() {
	var n = document.getElementById('heure');
	var dt = new Date();

	var h = dt.getHours();
	var m = dt.getMinutes();
	h = (h < 10) ? "0" + h : h;
	m = (m < 10) ? "0" + m : m;

	n.innerHTML = h + ":" + m;
}

/* returns 0 if different, 1 if equal */
function array_compare(a, b) {
	if (a.length != b.length) {
		return 1;
	}

	for (var i = 0; i < a.length; i++) {
		if (a[i] != b[i]) {
			return 1;
		}
	}

	return 0;
}




function get_data(obj) {
	if (obj.readyState == 4 && obj.status == 200) {
		var text = obj.responseText;
		var info = JSON.parse(text);
		var trains = info.trains;
		var messages = info.info;
	
		for (var i = 0; i < trains.length; i++) {
			var train = trains[i];

			table_get_node(i).className = train.trainclass;

			table_set_innerhtml(i, '1a', train.mission);
			table_set_innerhtml(i, '1b', train.numero);
			table_get_node(i, '1b').className = 'numero-train';

			if (train.retard != null 
				&& train.time != 'Supprimé' && train.time != 'Retardé') {
				table_set_innerhtml(i, '1c', train.retard);
			} else {
				table_set_innerhtml(i, '1c', undefined);
				table_get_node(i, '1b').className = 'numero-train no-flip';
			}


			table_set_innerhtml(i, '2', train.time);

			var dest = train.destination;
			if (train.ligne)
				dest = '<img src="img/rer' 
					+ train.ligne + '.svg" alt="'
					+ train.ligne + '" />' + ' ' + dest;

			table_set_innerhtml(i, '3a', dest);
			if (i < 2) {
				var p = table_get_node(i, '3b').childNodes[0];
				p.innerHTML = train.dessertes;
				if (origTrains[i] != train.numero) {
					p.style.bottom = "0.1em";
				}
			}
				

			if (train.platform != null && train.platform != " ") {
				table_set_innerhtml(i, '4', '<span class="voie">' + train.platform + '</span>');
			} else {
				table_set_innerhtml(i, '4', undefined);
			}

			origTrains[i] = train.numero;
		}
		for (; i < 6; i++)
		{
			table_get_node(i).className = 'train';
			table_set_innerhtml(i, '1a', undefined);
			table_set_innerhtml(i, '1b', undefined);
			table_set_innerhtml(i, '1c', undefined);
			table_set_innerhtml(i, '2', undefined);
			table_set_innerhtml(i, '3a', undefined);
			if (i < 2) {
				table_set_innerhtml(i, '3b', "<p style='bottom: 0.1em'>"
					+ "&nbsp;"
					+ "</p></div>");
			}
			table_set_innerhtml(i, '4', undefined);
			origTrains[i] = -1;
		}


		var lmsg = document.getElementById('conteneurmessages');
		lmsg.innerHTML = '';

		/* on met le premier élément deux fois pour donner l'illusion
		 * d'un "rouleau" qui scroll
		 */
		if (messages.length > 0) {
			for (var i = 0; i <= messages.length; i++) {
				var node = document.createElement('div');
				node.className = 'message';
				
				var nodeText = document.createTextNode(messages[i % messages.length]);
				node.appendChild(nodeText);
				lmsg.appendChild(node);
			}
		}

		dataRefreshTimer = window.setTimeout(function() { init_data(0) }, 12000);
		col2flipTimer = window.setTimeout(function() { flip_retard(1) }, retardTimeout1);

		dataRetryCount = 0;

		init_filtres(info.lines);
	}
	else if (obj.readyState == 4 && obj.status == 503) {
		var err = JSON.parse(obj.responseText);

		if (err.error === "API is broken\n") {
			if (dataRetryCount++ >= 10) {
				die("API indisponible pour le moment");
			}
			else
				dataRefreshTimer = window.setTimeout(
					function() { init_data(0) }, 
					250 * dataRetryCount);
		} else {
			die(err.error);
		}
	}
	else if (obj.status >= 400 && obj.status != 503) {
		try {
			var err = JSON.parse(obj.responseText);
			die(err.error);
		} catch (e) {
			die("Impossible de récupérer les prochains trains (erreur "
				+ obj.status + ").");
		}
	}
}

/* b = 1 => afficher retard
 * b = 0 => afficher numéro train */
function flip_retard(b) {
	class_name = (b ? 'retard-flip' : 'no-retard-flip');
	next_value = (b ? 0 : 1);
	next_timeout = (b ? retardTimeout2 : retardTimeout1);

	document.getElementById("listetrains").className = class_name;
	window.clearTimeout(col2flipTimer);
	col2flipTimer = window.setTimeout(function() { flip_retard(next_value) }, next_timeout);
}


function init_data(b) {
	if (xmlHttp) xmlHttp.abort();

	if (b) {
		set_cookie('station', originCode);
		if (dataRefreshTimer) { window.clearTimeout(dataRefreshTimer); }

		var lmsg = document.getElementById('conteneurmessages');
		lmsg.innerHTML = '';

		for (var i = 0; i < 6; i++) {
			table_get_node(i).className = 'train';
			table_set_innerhtml(i, '1a', undefined);
			table_set_innerhtml(i, '1b', undefined);
			table_set_innerhtml(i, '1c', undefined);
			table_set_innerhtml(i, '2', undefined);
			if (i < 2) {
				table_set_innerhtml(i, '3a', "Chargement... ");
				table_set_innerhtml(i, '3b', "<p style='bottom: 0.1em'>"
					+ "Chargement en cours..."
					+ "</p></div>");
			}
			else 
				table_set_innerhtml(i, '3a', undefined);
			
			table_set_innerhtml(i, '4', undefined);
			origTrains[i] = -1;
		}
	}


	xmlHttp = new XMLHttpRequest();

	var url = "json?s=" + originCode;
	if (originLineFilter)
		url = url + "&l=" + originLineFilter;

	xmlHttp.open("GET", url, true);
	xmlHttp.send();

	xmlHttp.onreadystatechange = function() { get_data(xmlHttp); };
}


function init_filtres(lignes) {
	flt = document.getElementById("line_filter");

	if (lignes.length <= 1) {
		show_more_options(false);
		document.getElementById("more_options_button").style.display = "none";
		return;
	} else {
		document.getElementById("more_options_button").style.display = "inline-block";
	}

	while (flt.childNodes.length > 0)
		flt.removeChild(flt.childNodes[0]);
	
	var flt_ul = document.createElement("ul");

	var li_0 = document.createElement("li");
	li_0.className = "button";
	li_0.title = "Montrer toutes les lignes";
	var li_0_p = document.createElement("p");
	var li_0_p_text = document.createTextNode("Toutes");
	li_0.onclick = function(l) { return function() { change_line_filter(l) } }(null);
	if (!originLineFilter) li_0.className = "button pressed";
	li_0_p.appendChild(li_0_p_text);
	li_0.appendChild(li_0_p);
	flt_ul.appendChild(li_0);

	for (var i = 0; i < lignes.length; i++) {
		var li = document.createElement("li");
		li.className = "button";
		li.title = "Ligne " + lignes[i] + " seulement";
		var p = document.createElement("p");
		var img = document.createElement("img");
		img.src = "/img/rer" + lignes[i] + ".svg";
		img.alt = li.title;

		if (lignes[i] == originLineFilter) 
			li.className = "button pressed";

		li.onclick = function(l) { return function() { change_line_filter(l) } }(lignes[i]);

		p.appendChild(img);
		li.appendChild(p);
		flt_ul.appendChild(li);
	}

	flt.appendChild(flt_ul);
	flt.style.display = "inline-block";
}



function init_scroll() {
	for (var i = 0; i < 2; i++) {
		var pNode = table_get_node(i, '3b').childNodes[0];
		pNode.style.bottom = "0.1em";
		window.setTimeout("train_scroll("+i+")", scrollTimeout);
	}
	window.setTimeout(function() { msg_scroll(); }, msgScrollTimeout);
}

function init_other() {
	window.setInterval(update_time, 1000);
	show_more_options(false);
}




/* set/kill scroll animation */
/* b = 0 -> kill, b = <duration> -> set <duration> in seconds */
function set_scroll(node, b) {
	node.style.transitionDuration 		  = b + 's';
	node.style['-webkit-transition-duration'] = b + 's';
	node.style.transitionProperty 		  = b ? 'bottom' : 'none';
	node.style['-webkit-transition-property'] = b ? 'bottom' : 'none';
}


/* Warning, this function contains ugly hacks with vendor-proprietary CSS
 * attributes.  The Webkit guys usually do a good job, but messed this up
 * big time.  It is frustrating to see a standards-compliant design break on
 * mobile devices because of that.
 */
function train_scroll(num) {
	/* scrolls obj */
	var pNode = table_get_node(num, '3b').childNodes[0];

	var scroll = 0;
	if (pNode.style)
		scroll = extract_float(pNode.style.bottom);
	else 
		pNode.style = "bottom: 0em;";
	
	var height    = pNode.clientHeight;
	var p_height  = pNode.parentNode.clientHeight;
	/* p_height gives us 1.3em in pixels so we convert em into px */
	var scroll_px = scroll * p_height / 1.3;  


	if (scroll_px >= height) {
		set_scroll(pNode, 0);
		scroll = -1.4;
		pNode.style.bottom = scroll + "em";
		return train_scroll(num);
	}

	if (height > 2 * p_height) {
		set_scroll(pNode, 0.9);
		scroll += 1.5;
		window.setTimeout(function() { set_scroll(pNode, 0) }, '1000');
		pNode.style.bottom = scroll + "em"; 
	}
	else {
		pNode.style.bottom = "0.1em"; 
	}

	/* have we scrolled beyond an element's max height? */

	window.setTimeout(function() { train_scroll(num); }, scrollTimeout);
}



function msg_scroll() {
	/* scrolls obj */
	var pNode = document.getElementById('conteneurmessages');
	if (pNode.innerHTML === "")
		return;

	var scroll = 0;
	if (pNode.style)
		scroll = extract_float(pNode.style.bottom);
	else 
		pNode.style = "bottom: 0em;";

	if (scroll == undefined)
		scroll = 0;
	
	var height    = pNode.clientHeight;
	var p_height  = pNode.parentNode.clientHeight;
	/* p_height gives us 6em in pixels so we convert em into px */
	var scroll_px = scroll * p_height / 6;  


	if (scroll_px >= height - p_height) {
		set_scroll(pNode, 0);
		scroll = 0;
		pNode.style.bottom = scroll + "em";
		return msg_scroll();
	}

	if (height > 2 * p_height) {
		set_scroll(pNode, 2);
		scroll += 6;
		pNode.style.bottom = scroll + "em"; 
	}
	else {
		pNode.style.bottom = "0em"; 
	}

	/* have we scrolled beyond an element's max height? */

	window.setTimeout(function() { msg_scroll(); }, msgScrollTimeout);
}


function show_more_options(b) {
	var extraOpts = document.getElementById('more_options');
	var extraOptsButton = document.getElementById('more_options_button');

	extraOptsButton.onclick = function(b) { 
		return function() { show_more_options(!b); } 
	}(b);

	if (b) {
		extraOpts.style.display = "block";
		extraOptsButton.className = "button pressed";
	} else {
		extraOpts.style.display = "none";
		extraOptsButton.className = "button";
	}
}


function change_station(new_code, new_station, do_push_state) {
	flip_retard(false);

	if (do_push_state !== false) {
		window.history.pushState(
			{code: new_code, name: new_station}, 
			new_station, 
			"?s=" + new_code);
	}

	originCode = new_code;
	originLineFilter = null;
	init_data(1);
	document.title = new_station + " \u2022 Prochains départs";
}

function change_line_filter(new_line_filter) {
	originLineFilter = new_line_filter;
	init_data(1);
}

function combobox_change_station(do_push_state) {
	var sel = document.getElementById("station_list");
	var new_code 	= sel.options[sel.selectedIndex].value;
	var new_station = sel.options[sel.selectedIndex].text;

	change_station(new_code, new_station, do_push_state);
}


listenEvent(window, "load", function() { init_data(1); init_scroll(); init_other(); update_time(); });

window.onpopstate = function(e) {
	if (e.state) {
		document.getElementById("station_list").value = e.state.code;
		document.getElementById("s2").value = e.state.name;
		combobox_change_station(false);
	}
}

</script>
</head>

<body>

<div id="haut">
	<form id="form_otherstation" method="GET" action="#">
		<span id="more_options_button" title="Afficher plus d'options" class="button"><i class="material-icons">&#xe5cf;</i></span>
		<label for="s2">Départ&nbsp;:</label>
		<input type="text" name="s2" id="s2" title="Gare à partir de laquelle afficher les prochains départs" value="<% origin_station %>" placeholder="Saisissez le nom ou le code d'une gare..." />
		<select id="station_list" name="s" onchange="combobox_change_station()">
<% FOREACH s IN stations -%>
			<option value="<% s.code %>"
				<%- IF s.code == origin_code %> selected="selected"<%- END -%>
			>
				<% s.name %>
			</option>
<% END -%>
		</select>
		<input id="station_submit" type="submit" value="valider" />

		<div id="autocomp"></div>
	</form>

	<div id="more_options">
		<div id="line_filter"></div>
	</div>

</div>

<div id="heure">--:--</div>

<div id="listetrains" class="no-retard-flip">

<% FOR i in [0..5] %>
<div class="train" id="t<% i %>">
	<div class="force-height"></div>
	<div class="group group-left">
		<span class="mission-train" id="t<% i %>c1a">&nbsp;</span>
		<span class="numero-train" id="t<% i %>c1b">&nbsp;</span>
		<span class="retard-train" id="t<% i %>c1c">&nbsp;</span><br class="after-retard-train">
	</div>
	<div class="group group-middle">
		<span class="heure-train" id="t<% i %>c2">&nbsp;</span>
	</div>
	<div class="group">
		<span class="destination-train" id="t<% i %>c3a"><% IF i <= 1 %>Chargement...<% END %></span>
		<% IF i <= 1 -%>
		<div class="desserte-train" id="t<% i %>c3b"><ul><li>Chargement en cours...</li></ul></div>
		<%- END %>
		<span class="voie-train" id="t<% i %>c4">&nbsp;</span>
	</div>
</div>
<% END %>


</div>

<div id="listemessages">
	<div id="conteneurmessages">
	</div>
</div>

<div id="error">
	<div class="error-overlay">
		<p id="errormsg">
		<script type="text/javascript">document.getElementById("error").style.display = "none";</script>
		<noscript>Désolé, ce site nécessite JavaScript pour fonctionner.</noscript>
		</p>
	</div>
</div>

<script type='text/javascript'>
init_autocomp('form_otherstation', 's2', 'station_list', 'autocomp', 'station_submit');
</script>

<div id="footer">
&copy; 2013&ndash;2016 <a href="http://x0r.fr">x0r</a> • <a href="http://x0r.fr/blog/55">Blog</a> • <a href="https://bitbucket.org/xtab/rer-web">Code source</a> • <a href="http://data.sncf.com/">SNCF Open Data Transilien</a> • Dernière mise à jour : <% dmaj || 'inconnue' %>
</div>

</body>

</html>

